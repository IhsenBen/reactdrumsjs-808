{"version":3,"sources":["components/DrumPad.jsx","App.js","reportWebVitals.js","index.js"],"names":["DrumPad","handleClick","console","log","audio","play","currentTime","props","handleDisplay","name","handleKeydown","e","keyCode","text","charCodeAt","document","addEventListener","this","window","focus","removeEventListener","className","onClick","id","type","size","src","ref","React","Component","kit","key","App","display","setState","state","map","sound","idx","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"4PAKqBA,E,4MAanBC,YAAc,WACZC,QAAQC,IAAI,EAAKC,OACjB,EAAKA,MAAMC,OACX,EAAKD,MAAME,YAAc,EAEzB,EAAKC,MAAMC,cAAc,EAAKD,MAAME,O,EAGtCC,cAAgB,SAACC,GACXA,EAAEC,UAAY,EAAKL,MAAMM,KAAKC,eAChC,EAAKV,MAAMC,OACX,EAAKD,MAAME,YAAc,EAGzB,EAAKC,MAAMC,cAAc,EAAKD,MAAME,Q,uDAzBxC,WACEM,SAASC,iBAAiB,UAAWC,KAAKP,eAE1CQ,OAAOC,U,kCAGT,WACEJ,SAASK,oBAAoB,UAAWH,KAAKP,iB,oBAsB/C,WAAU,IAAD,OACP,EAAwBO,KAAKV,MAArBM,EAAR,EAAQA,KAAMT,EAAd,EAAcA,MAEd,OACE,sBAAKiB,UAAU,WAAWC,QAASL,KAAKhB,YAAasB,GAAE,YAAOV,GAA9D,UACE,cAAC,gBAAD,CAAeW,KAAK,UAAUC,KAAK,QAAnC,SACGZ,IAGH,uBACEa,IAAKtB,EACLiB,UAAU,OACVM,IAAK,SAACA,GAAD,OAAU,EAAKvB,MAAQuB,GAC5BJ,GAAIV,W,GA5CuBe,IAAMC,WCArCC,EAAM,CACV,CACEC,IAAK,IACLL,IAAK,sFACLjB,KAAM,WAER,CACEsB,IAAK,IACLL,IAAK,4FACLjB,KAAM,aAER,CACEsB,IAAK,IACLL,IAAK,2FACLjB,KAAM,YAER,CACEsB,IAAK,IACLL,IAAK,2FACLjB,KAAM,YAER,CACEsB,IAAK,IACLL,IAAK,6FACLjB,KAAM,cAER,CACEsB,IAAK,IACLL,IAAK,0FACLjB,KAAM,WAER,CACEsB,IAAK,IACLL,IAAK,4FACLjB,KAAM,aAER,CACEsB,IAAK,IACLL,IAAK,2FACLjB,KAAM,YAER,CACEsB,IAAK,IACLL,IAAK,4FACLjB,KAAM,cAGWuB,E,kDAAyB,WAAYzB,GAAO,IAAD,8BAC9D,cAAMA,IAoBNC,cAAgB,SAAAyB,GAAO,OAAI,EAAKC,SAAS,CAAED,aAhB3C,EAAKE,MAAQ,CAUXF,QAAQ,QAfoD,E,0CAuB9D,WAAU,IAAD,OACP,OACE,8BACE,qBAAKZ,UAAU,MAAf,SACE,sBAAKE,GAAG,eAAeF,UAAU,YAAjC,UACA,qBAAKA,UAAU,QAAf,SACE,gDAGF,sBAAKA,UAAU,YAAf,UACE,qBAAME,GAAG,UAAUF,UAAU,UAA7B,SACE,oBAAIE,GAAG,UAAP,SAAkBN,KAAKkB,MAAMF,YAE/B,qBAAMZ,UAAU,iBAAhB,SACGS,EAAIM,KAAI,SAACC,EAAOC,GAAR,OACP,cAAC,EAAD,CAASzB,KAAMwB,EAAMN,IAAqBtB,KAAM4B,EAAM5B,KAAML,MAAOiC,EAAMX,IAAMlB,cAAe,EAAKA,eAApE6B,EAAMN,wB,GAtCpBF,aCxClBU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnC,SAASoC,eAAe,SAM1BZ,K","file":"static/js/main.28f7f7d0.chunk.js","sourcesContent":["import \"../App.css\";\r\nimport { AwesomeButton } from \"react-awesome-button\";\r\nimport \"react-awesome-button/dist/themes/theme-red.css\";\r\nimport React from \"react\";\r\n\r\nexport default class DrumPad extends React.Component {\r\n  //pass the event listener to the e function\r\n  componentDidMount() {\r\n    document.addEventListener(\"keydown\", this.handleKeydown);\r\n\r\n    window.focus();\r\n  }\r\n  // close the event listener\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keydown\", this.handleKeydown);\r\n  }\r\n  // the above was like an open/close door to pass the key input ( not sure, but I think it's an outdated method)\r\n\r\n  handleClick = () => {\r\n    console.log(this.audio);\r\n    this.audio.play();\r\n    this.audio.currentTime = 0;\r\n\r\n    this.props.handleDisplay(this.props.name);\r\n  };\r\n\r\n  handleKeydown = (e) => {\r\n    if (e.keyCode === this.props.text.charCodeAt()) {\r\n      this.audio.play();\r\n      this.audio.currentTime = 0;\r\n      \r\n\r\n      this.props.handleDisplay(this.props.name);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { text, audio } = this.props;\r\n\r\n    return (\r\n      <div className=\"drum-pad\" onClick={this.handleClick} id={`b-${text}`}>\r\n        <AwesomeButton type=\"primary\" size=\"large\">\r\n          {text}\r\n        </AwesomeButton>\r\n\r\n        <audio\r\n          src={audio}\r\n          className=\"clip\"\r\n          ref={(ref) => (this.audio = ref)}\r\n          id={text}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// dosen't handle the display text state onchange\r\n// document.addEventListener('keydown', (e) => {\r\n\r\n//   const id = e.key.toUpperCase();\r\n//   const audio = document.getElementById(id);\r\n//   // console.log(id);\r\n//   if(audio) {\r\n//     audio.currentTime = 0;\r\n\r\n//     console.log(audio);\r\n//     audio.play();\r\n//   }\r\n// });\r\n","import \"./App.css\";\nimport DrumPad from \"./components/DrumPad\";\nimport React, {Component } from \"react\";\n\n\nconst kit = [\n  {\n    key: \"Q\",\n    src: \"https://github.com/IhsenBen/reactdrumsjs-808/blob/gh-pages/sounds/kick.mp3?raw=true\",\n    name: \"Low Tom\",\n  },\n  {\n    key: \"W\",\n    src: \"https://github.com/IhsenBen/reactdrumsjs-808/blob/master/src/sounds/lowconga.WAV?raw=true\",\n    name: \"Low Conga\",\n  },\n  {\n    key: \"E\",\n    src: \"https://github.com/IhsenBen/reactdrumsjs-808/blob/master/src/sounds/cowbell.WAV?raw=true\",\n    name: \"Cow Bell\",\n  },\n  {\n    key: \"A\",\n    src: \"https://github.com/IhsenBen/reactdrumsjs-808/blob/master/src/sounds/openhat.WAV?raw=true\",\n    name: \"Open Hat\",\n  },\n  {\n    key: \"S\",\n    src: \"https://github.com/IhsenBen/reactdrumsjs-808/blob/master/src/sounds/snaredrum.WAV?raw=true\",\n    name: \"Snare Drum\",\n  },\n  {\n    key: \"D\",\n    src: \"https://github.com/IhsenBen/reactdrumsjs-808/blob/master/src/sounds/lowtom.WAV?raw=true\",\n    name: \"Low bla\",\n  },\n  {\n    key: \"Z\",\n    src: \"https://github.com/IhsenBen/reactdrumsjs-808/blob/master/src/sounds/bassdrum.WAV?raw=true\",\n    name: \"Bass Drum\",\n  },\n  {\n    key: \"X\",\n    src: \"https://github.com/IhsenBen/reactdrumsjs-808/blob/master/src/sounds/midtown.WAV?raw=true\",\n    name: \"Mid Town\",\n  },\n  {\n    key: \"C\",\n    src: \"https://github.com/IhsenBen/reactdrumsjs-808/blob/master/src/sounds/handclap.WAV?raw=true\",\n    name: \"Hand Clap\",\n  },\n];\nexport default class App extends Component {  constructor(props){\n  super(props)\n\n\n\n  this.state = {\n    // I should replace this by an array of objects  with the key name, src of the audio file and the name of the audio\n    // map through the array of objects\n    // pass the elements as props in the app component\n    //use the props in the box.jsx component\n    // create a method that handle click play sounds on that component\n    // create a method that handle press play sounds on that component with this e.keyCode === this.props.letter.charCodeAt()\n    // create a method that handle the display of the same of the sound on that component and  call in the above methods\n    //call the handle click method on the drumpad div with onClick\n    // voila voilou faut just coder tout Ã§a bordel de merde/ i just need to code all this damn it\n    display:\"hey!\"\n  };\n}\n\n\n\n  handleDisplay = display => this.setState({ display })\n\n  render() {\n    return (\n      <div>\n        <div className=\"App\">\n          <div id=\"drum-machine\" className=\"container\">\n          <div className=\"title\">\n            <h1>Drum Machine</h1>\n          </div>\n\n          <div className=\"container\">\n            <div  id=\"display\" className=\"display\">\n              <h1 id=\"display\">{this.state.display}</h1>\n            </div>\n            <div  className=\"pads-container\">\n              {kit.map((sound, idx) => (\n                <DrumPad text={sound.key} key={sound.key} name={sound.name} audio={sound.src}  handleDisplay={this.handleDisplay}/>\n              ))}\n            </div>\n          </div>\n        </div>\n        </div>\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}